CREATE PROCEDURE SP_GFT_CHECK_TRADECATEGORIES
@TBTRADE AS TBTRADE READONLY
AS
BEGIN 

BEGIN TRY
	--CREATE DOMAIN TABLES IF NOT EXISTS
	IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME  = 'CATEGORY')
	BEGIN 
		EXEC SP_GFT_CREATE_TABLE_CATEGORY 1
	END

	IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME  = 'SECTOR')
	BEGIN 
		EXEC SP_GFT_CREATE_TABLE_SECTOR 1
	END

	--CREATE RELATION TABLE WITH TEST RULES
	IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME  = 'TRADECATEGORY')
	BEGIN 
		EXEC SP_GFT_CREATE_TABLE_TRADECATEGORY 1
	END
	

	--CHECK CATEGORY OF INFORMED VALUES THROUGHT PARAMETER
	IF EXISTS(SELECT * FROM TEMPDB..SYSOBJECTS WHERE NAME LIKE '#TB_RESULT%')
	BEGIN 
		DROP TABLE #TB_RESULT
	END
	   		
	CREATE TABLE #TB_RESULT(CATEGORY NVARCHAR(50))

	IF EXISTS(SELECT * FROM TEMPDB..SYSOBJECTS WHERE NAME LIKE '#TB_TRADETMP%')
	BEGIN 
		DROP TABLE #TB_TRADETMP
	END

	SELECT * INTO #TB_TRADETMP FROM @TBTRADE 

	WHILE ((SELECT COUNT(*) FROM #TB_TRADETMP) > 0)
	BEGIN 
		DECLARE @VL AS DECIMAL
		DECLARE @SECTOR AS NVARCHAR(50)
		DECLARE @IDTRADE AS NVARCHAR(50)
		DECLARE @CATEGORYRESULT AS NVARCHAR(50) = NULL

		SELECT TOP 1 @VL = VALUE, 
					@SECTOR = CLIENTSECTOR, 
					@IDTRADE = ID FROM #TB_TRADETMP
				
		
		SELECT @CATEGORYRESULT = C.CATEGORY FROM TRADECATEGORY TC(NOLOCK)
			INNER JOIN CATEGORY C(NOLOCK) ON TC.CATEGORY_ID = C.ID 
			INNER JOIN SECTOR S(NOLOCK) ON TC.SECTOR_ID = S.ID 
		WHERE UPPER(S.SECTOR) = UPPER(@SECTOR)
		AND ISNULL(TC.INITIALVALUE,0) < @VL
		AND (ISNULL(TC.FINALVALUE,0) > @VL OR (ISNULL(TC.FINALVALUE,0) = 0))	
		
		--FOR VALUES THAT ARE NOT ON TRADECATEGORY
		IF (@CATEGORYRESULT IS NULL)
		BEGIN 
			SELECT @CATEGORYRESULT =  'NO CATEGORY'
		END 

		INSERT INTO #TB_RESULT VALUES(@CATEGORYRESULT)
		DELETE FROM #TB_TRADETMP WHERE ID = @IDTRADE
	END

	SELECT * FROM #TB_RESULT(NOLOCK)

END TRY
BEGIN CATCH
	DECLARE @ERRORMESSAGE NVARCHAR(4000);  
    DECLARE @ERRORSEVERITY INT;  
    DECLARE @ERRORSTATE INT;  
  
    SELECT   
        @ERRORMESSAGE = ERROR_MESSAGE(),  
        @ERRORSEVERITY = ERROR_SEVERITY(),  
        @ERRORSTATE = ERROR_STATE();  
  
    RAISERROR (@ERRORMESSAGE, 
               @ERRORSEVERITY,
               @ERRORSTATE
               );  
END CATCH
END